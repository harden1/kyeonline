/*
 * @Author: Yinxianbiao
 * @Date: 2017-08-12 19:36:29
 * @Last Modified by: yinxianbiao
 * @Last Modified time: 2017-08-17 23:23:09
 */

/**
 * 用于循环生成数值类型的"%"占位选择器
 * @param {number, number, string} 数值开始$start 数值结束$end 样式名$style
 */
@mixin constFactory($start, $end, $style) {
    @for $i from $start through $end {
        %#{$style}#{$i} {
            #{$style}: #{$i}px;
        }
    }
}

/**
 * 设置全局框模型
 * @param {string} $model (默认是box-border)
 */
@mixin boxModel($model:'border') {
    $x: $model+'-box';
    *,
    *:after,
    *:before {
        box-sizing:#{$x};
    }
}

/**
 * 重置样式
 * @param {string} $mode (默认是normalize)
 */
@mixin reset($mode:'normalize'){
    @if $mode =='normalize'{
        /*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
        html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body,ul,dl,ol,dd{margin:0;list-style:none;}article,aside,footer,header,nav,section{display:block}h1{margin:0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:0;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}a{text-decoration: none;}
    }
}

/**
 * 生成N组%占位符选择器
 * @param {string} $key
 * @param {map} $vals
 */
@mixin skel($key,$vals){
    @each $i in $vals{
        %#{$i}{
            #{$key}:$i;
        }
    }
}

/**
 * 获取配置参数值
 * @author Hugo Giraudel
 * @param {map} $map Map
 * @param {string} $keys Key(s)
 * @return {string} Value
 */
@function val($map, $keys...) {
    @if nth($keys, 1) == null {
        $keys: remove-nth($keys, 1);
    }
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

/// Removes a specific item from a list.
/// @author Hugo Giraudel
/// @param {list} $list List.
/// @param {integer} $index Index.
/// @return {list} Updated list.
@function remove-nth($list, $index) {

    $result: null;

    @if type-of($index) != number {
        @warn "$index: #{quote($index)} is not a number for `remove-nth`.";
    }
    @else if $index == 0 {
        @warn "List index 0 must be a non-zero integer for `remove-nth`.";
    }
    @else if abs($index) > length($list) {
        @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
    }
    @else {

        $result: ();
        $index: if($index < 0, length($list) + $index + 1, $index);

        @for $i from 1 through length($list) {

            @if $i != $index {
                $result: append($result, nth($list, $i));
            }

        }

    }

    @return $result;

}


/**
 * 初始化布局模块
 * @param {map} $config
 */
@mixin skel-layout($config:()){
    //Reset
    $x     : map-get($config,'reset');
    @if $x{
        @include reset($x);
    }

    //BoxModel
    $x     : map-get($config,'boxModel');
    @if $x{
        @include boxModel($x);
    }

    //Skel
    $x:map-get($config, 'skel');
    @if length($x) > 1{
        @each $i in $x{
            $key:nth($i,1);
            $vals:nth($i,2);
            @include skel($key,$vals);
        }   
    }@else{
        $key:nth($i,1);
        $vals:nth($i,2);
        @include skel($key,$vals);
    }

    //Const
    $consts: map-get($config,'consts');
    @if $consts{
        @each $i in $consts{
            @include constFactory(nth($i,2), nth($i,3), nth($i,1));
        }
    }
};

